/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Sun Mar 15 14:54:58 2020. */

#ifndef PB_PARSE_PB_H_INCLUDED
#define PB_PARSE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(16) Data_thread_ext_addr_t;
typedef struct _Data {
    char discovery[64];
    char git_version[64];
    uint32_t thread_rloc16;
    Data_thread_ext_addr_t thread_ext_addr;
    uint32_t thread_parent_avg_rssi;
    uint32_t thread_parent_last_rssi;
/* @@protoc_insertion_point(struct:Data) */
} Data;

typedef PB_BYTES_ARRAY_T(64) Header_id_t;
typedef struct _Header {
    uint32_t version;
    Header_id_t id;
    char device_type[64];
    uint32_t seq_no;
    uint64_t tv_sec;
    uint32_t tv_usec;
/* @@protoc_insertion_point(struct:Header) */
} Header;

typedef struct _Message {
    Header header;
    Data data;
/* @@protoc_insertion_point(struct:Message) */
} Message;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Header_init_default                      {0, {0, {0}}, "", 0, 0, 0}
#define Data_init_default                        {"", "", 0, {0, {0}}, 0, 0}
#define Message_init_default                     {Header_init_default, Data_init_default}
#define Header_init_zero                         {0, {0, {0}}, "", 0, 0, 0}
#define Data_init_zero                           {"", "", 0, {0, {0}}, 0, 0}
#define Message_init_zero                        {Header_init_zero, Data_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define Data_discovery_tag                       1
#define Data_git_version_tag                     2
#define Data_thread_rloc16_tag                   50
#define Data_thread_ext_addr_tag                 51
#define Data_thread_parent_avg_rssi_tag          52
#define Data_thread_parent_last_rssi_tag         53
#define Header_version_tag                       1
#define Header_id_tag                            2
#define Header_device_type_tag                   3
#define Header_seq_no_tag                        4
#define Header_tv_sec_tag                        5
#define Header_tv_usec_tag                       6
#define Message_header_tag                       1
#define Message_data_tag                         2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Header_fields[7];
extern const pb_field_t Data_fields[7];
extern const pb_field_t Message_fields[3];

/* Maximum encoded size of messages (where known) */
#define Header_size                              161
#define Data_size                                172
#define Message_size                             339

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PARSE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
